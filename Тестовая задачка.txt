1) Ммеется топик client-accounts в кафке с данными, имеющий следующую структуру:

{
   "clientId":"4fd7a144-26cb-46fa-b5b4-768ed4576243",
   "clientName":"Name",
   "age":25,
   "updatedAt":"2021-06-01T06:47:52.673858Z",
   "departmentId": 321,
   "accounts":[
      {
         "":12345,
         "openingDate":"2025-06-10",
         "closingDate":null,
         "balance":1000
      },
      {
         "number":123456,
         "openingDate":"2024-09-23",
         "closingDate":null,
         "balance":10
      },
      {
         "number":1234567,
         "openingDate": "2021-12-31",
         "closingDate": "2022-02-23",
         "balance":1000
      }
   ]
}

2) Необходимо реализовать сервис для работы с клиентами и счетами, который:

2.1)  Получает данные из указанного топика и сохраняет в свою локальную БД (Таблицы можно создать отдельным скриптом)
2.2)  Предоставляет следующие REST-методы:
2.3.1) GET /clients - получение списка клиентов
		Вход:
			Обязательные параметры - page (номер страницы), size (размер страницы)
			Необязательные параметры clientName, minAge, maxAge (фильтрация по полю age)
		Результат: 
			json со списком клиентов, со следующими полями:
				- идентификатор клиента         (поле clientId в сообщении)
				- имя                           (поле clientName в сообщении) 
				- возраст                       (поле age в сообщении) 
				- сумма денег на всех счетах    (поле totalBalance. Сумма поля balance в сообщении для всех счетов клиента)  
				- page                          (номер страницы) 
				- size                          (размер страницы) 
2.3.2) GET /accounts/{clientId} - получение списка счетов клиента
		Вход:
			обязательные параметры - clientId
			необязательные параметры minAmount (минимальная сумма денег на всех счетах клиента)
		Результат: 
			json со списком счетов клиента, со следующими полями:
				- идентификатор клиента (поле clientId в сообщении)
				- имя                   (поле clientName в сообщении) 
				- возраст               (поле age в сообщении) 
				- идентификатор счета   (поле number в сообщении)
				- дата открытия счета   (поле openingDate в сообщении) 
				- дата закрытия счета   (поле closingDate в сообщении) 
				- баланс счета          (поле balance в сообщении)   
				
Используемый стек: spring boot 3, spring mvc, spring jdbc, spring kafka 
